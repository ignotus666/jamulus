# Simplified build workflow for custom packages
# Builds only .deb, .exe, and .apk packages
# Triggered manually only for my-build branch

name: Custom Build
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.container }}
    if: github.ref == 'refs/heads/my-build'
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Linux .deb
            os: ubuntu-22.04
            container: ubuntu:20.04
            command: ./.github/autobuild/linux_deb.sh
            target: linux

          - name: Windows .exe
            os: windows-2022
            command: powershell .\.github\autobuild\windows.ps1 -Stage
            target: windows

          - name: Android .apk
            os: ubuntu-22.04
            command: ./.github/autobuild/android.sh
            target: android
            fetch_depth: 0

    steps:
      - name: Set up base dependencies in container
        if: matrix.config.container == 'ubuntu:20.04'
        run: |
          apt-get -qq update
          apt-get install -y software-properties-common sudo curl
          add-apt-repository ppa:git-core/ppa
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          apt-get -qq update
          apt-get -qq -y install git-core gh
          git config --global --add safe.directory "\${GITHUB_WORKSPACE}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: \${{ matrix.config.target == 'android' }}
          fetch-depth: \${{ matrix.config.fetch_depth || '1' }}

      - name: Cache Windows dependencies
        if: matrix.config.target == 'windows'
        uses: actions/cache@v4
        with:
          path: |
            C:\Qt
            C:\ChocoCache
            C:\AutobuildCache
          key: windows-\${{ hashFiles('.github/workflows/autobuild.yml') }}

      - name: Cache Android dependencies
        if: matrix.config.target == 'android'
        uses: actions/cache@v4
        with:
          path: |
            /opt/Qt
            /opt/android/android-sdk
            /opt/android/android-ndk
          key: android-\${{ hashFiles('.github/workflows/autobuild.yml') }}

      - name: Set up build dependencies
        run: \${{ matrix.config.command }} setup
        env:
          JAMULUS_BUILD_VERSION: \${{ github.run_number }}

      - name: Build
        run: \${{ matrix.config.command }} build
        env:
          JAMULUS_BUILD_VERSION: \${{ github.run_number }}

      - name: Get artifacts
        id: get-artifacts
        run: \${{ matrix.config.command }} get-artifacts
        env:
          JAMULUS_BUILD_VERSION: \${{ github.run_number }}

      - name: Upload primary artifact
        uses: actions/upload-artifact@v4
        with:
          name: \${{ steps.get-artifacts.outputs.artifact_1 }}
          path: deploy/\${{ steps.get-artifacts.outputs.artifact_1 }}
          retention-days: 31
          if-no-files-found: error

      - name: Upload secondary artifact
        if: steps.get-artifacts.outputs.artifact_2
        uses: actions/upload-artifact@v4
        with:
          name: \${{ steps.get-artifacts.outputs.artifact_2 }}
          path: deploy/\${{ steps.get-artifacts.outputs.artifact_2 }}
          retention-days: 31
          if-no-files-found: error
